services:

  dbclient:
    image: postgres
    environment:
      POSTGRES_DB: "dbc"
      POSTGRES_USER: "dbclientuser"
      POSTGRES_PASSWORD: "dbclientpassword"
    volumes:
      - ./serviceClient/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  dbclient_exporter:
    image: wrouesnel/postgres_exporter
    environment:
      DATA_SOURCE_NAME: "dbclientuser:dbclientpassword@dbclient:5432/dbc?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - dbclient

  dbbanque:
    image: postgres
    environment:
      POSTGRES_DB: "dbb"
      POSTGRES_USER: "dbbanqueuser"
      POSTGRES_PASSWORD: "dbbanquepassword"
    volumes:
      - ./serviceBanque/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"

  dbbanque_exporter:
    image: wrouesnel/postgres_exporter
    environment:
      DATA_SOURCE_NAME: "dbbanqueuser:dbbanquepassword@dbbanque:5433/dbb?sslmode=disable"
    ports:
      - "9188:9187"  # Change le port pour Ã©viter un conflit
    depends_on:
      - dbbanque

  serviceclient:
    build: ./serviceClient
    environment:
      OTEL_METRICS_EXPORTER: "prometheus"
      OTEL_EXPORTER_PROMETHEUS_HOST: "0.0.0.0"
      OTEL_EXPORTER_PROMETHEUS_PORT: "9464"
    ports:
      - "8080:8080"
    depends_on:
      - dbclient

  k6-client:
    image: grafana/k6
    volumes:
      - ./serviceclient/test-client.js:/test/test-client.js
    command: run /test/test-client.js
    depends_on:
      - serviceclient

  servicebanque:
    build: ./serviceBanque
    environment:
      OTEL_METRICS_EXPORTER: "prometheus"
      OTEL_EXPORTER_PROMETHEUS_HOST: "0.0.0.0"
      OTEL_EXPORTER_PROMETHEUS_PORT: "9465"
    ports:
      - "8081:8081"
    depends_on:
      - dbbanque

  k6-banque:
    image: grafana/k6
    volumes:
      - ./servicebanque/test-banque.js:/test/test-banque.js
    command: run /test/test-banque.js
    depends_on:
      - servicebanque

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.82.0
    restart: always
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the Collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      #- "55679:55679" # zpages extension
    depends_on:
      - servicebanque
      - serviceclient

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    restart: always
    ports:
      - "9090:9090"
    depends_on:
      - otel-collector

  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9093:9093"
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    ports:
      - "7070:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro

  node-exporter:
    image: prom/node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($|/)"'

  loki:
    container_name: loki
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    restart: always
    ports:
      - "3100"

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki

  jaeger:
    image: ${REGISTRY:-}jaegertracing/all-in-one:${JAEGER_VERSION:-latest}
    ports:
      - "16686:16686"
      - "9193:9193"
      - "14268:14268"