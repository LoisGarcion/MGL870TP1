services:

  dbclient:
    image: postgres
    environment:
      POSTGRES_DB: dbc
      POSTGRES_USER: dbclientuser
      POSTGRES_PASSWORD: dbclientpassword
    volumes:
      - ./serviceClient/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
  dbbanque:
    image: postgres
    environment:
      POSTGRES_DB: dbb
      POSTGRES_USER: dbbanqueuser
      POSTGRES_PASSWORD: dbbanquepassword
    volumes:
      - ./serviceBanque/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"

  serviceclient:
    build: ./serviceClient
    environment:
      OTEL_METRICS_EXPORTER: "prometheus"
      OTEL_EXPORTER_PROMETHEUS_HOST: "0.0.0.0"
      OTEL_EXPORTER_PROMETHEUS_PORT: "9464"
    ports:
      - "8080:8080"
    depends_on:
      - dbclient

  servicebanque:
    build: ./serviceBanque
    environment:
      OTEL_METRICS_EXPORTER: "prometheus"
      OTEL_EXPORTER_PROMETHEUS_HOST: "0.0.0.0"
      OTEL_EXPORTER_PROMETHEUS_PORT: "9464"
    ports:
      - "8081:8081"
    depends_on:
      - dbbanque

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.82.0
    restart: always
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the Collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    restart: always
    ports:
      - '9090:9090'
    depends_on:
      - servicebanque
      - serviceclient